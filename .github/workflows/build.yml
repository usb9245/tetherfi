name: Build and Release TetherFi

on:
  push:
    branches:
      - build

jobs:
  cache:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - uses: actions/cache@v3
        id: ktor-3_1_1-PYAMSOFT
        with:
          path: ~/.m2/repository/
          key: 3_1_1-PYAMSOFT
      
      - if: steps.ktor-3_1_1-PYAMSOFT.outputs.cache-hit != 'true'
        run: |
          git clone --branch pyamsoft-3.1.1 https://github.com/pyamsoft/ktor.git
          cd ktor
          ./gradlew publishKotlinMultiplatformPublicationToMavenLocal
          ./gradlew publishJvmPublicationToMavenLocal
          cd ..
          
  build:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache custom ktor
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository/
          key: 3_1_1-PYAMSOFT
        
      - name: Build with Gradle
        run: ./gradlew assembleFdroidDebug

      - name: List APK files
        run: ls -R app/build/outputs/apk/fdroid/debug/

      - name: Upload APK as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: tetherfi-apk
          path: app/build/outputs/apk/fdroid/debug/app-fdroid-debug.apk

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out TetherFi repository
        uses: actions/checkout@v2

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: tetherfi-apk
          path: app/build/outputs/apk/fdroid/debug/

      - name: List APK before uploading
        run: ls -R app/build/outputs/apk/fdroid/debug/

      - name: Generate Release Tag
        id: generate_tag
        run: |
          TAG_NAME="v$(date +'%Y%m%d%H%M')"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: Upload debug APK as release asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: app/build/outputs/apk/fdroid/debug/app-fdroid-debug.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
